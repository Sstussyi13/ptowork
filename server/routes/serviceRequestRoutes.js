import express from 'express';
import { submitRequest } from '../controllers/serviceRequestController.js';
import dbPromise from '../db/database.js';
import { requireAdmin } from '../middlewares/requireAdmin.js';
import { sendApplicationEmail } from '../server/mailer.js'; // –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç

const router = express.Router();

// üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫)
router.post('/requests', async (req, res) => {
  try {
    const { full_name, phone, service_type, message } = req.body;
    const db = await dbPromise;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏
    const service = await db.get('SELECT id FROM services WHERE name = ?', [service_type]);
    if (!service) {
      return res.status(400).json({ message: '–¢–∞–∫–æ–π —É—Å–ª—É–≥–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' });
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    await db.run(
      `INSERT INTO applications 
       (full_name, phone, message, service_id, created_at)
       VALUES (?, ?, ?, ?, datetime('now'))`,
      [full_name, phone, message, service.id]
    );

    // –û—Ç–ø—Ä–∞–≤–∫–∞ email (–¥–æ–±–∞–≤–ª–µ–Ω–æ)
    await sendApplicationEmail({ full_name, phone, service_type, message });

    res.status(201).json({ message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞' });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
router.get('/requests', /* ... */);

// ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
router.put('/requests/:id', /* ... */);

// ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
router.delete('/requests/:id', /* ... */);

// üìú –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É—Å–ª—É–≥ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
router.get('/services', /* ... */);

export default router;