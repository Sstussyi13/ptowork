import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
dotenv.config({ path: './server/.env' }); // –ø—É—Ç—å –∫ .env

const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});

export const sendApplicationEmail = async ({ full_name, phone, service_type, message }) => {
  const mailOptions = {
    from: `"–°–∞–π—Ç P–¢–û" <${process.env.SMTP_USER}>`,
    to: process.env.ADMIN_EMAIL,
    subject: `üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞`,
    html: `
      <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</h2>
      <p><strong>–ò–º—è:</strong> ${full_name}</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
      <p><strong>–¢–∏–ø —É—Å–ª—É–≥–∏:</strong> ${service_type}</p>
      <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ${message}</p>
    `,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log('üì® Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
  } catch (err) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email:', err.message || err);
  }
};
