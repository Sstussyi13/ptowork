import { createTransport } from 'nodemailer';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –¥–ª—è ES Modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∑–∫–∞ .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
dotenv.config({ path: join(__dirname, '../.env') });

const transporter = createTransport({
  host: process.env.SMTP_HOST,
  port: parseInt(process.env.SMTP_PORT),
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
  tls: {
    rejectUnauthorized: false
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
transporter.verify()
  .then(() => console.log('‚úÖ SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'))
  .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ SMTP:', err));

export const sendApplicationEmail = async (data) => {
  try {
    const info = await transporter.sendMail({
      from: `"–ó–∞—è–≤–∫–∏ —Å —Å–∞–π—Ç–∞" <${process.env.SMTP_USER}>`,
      to: process.env.ADMIN_EMAIL,
      subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
      html: `
        <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</h2>
        <p><strong>–ò–º—è:</strong> ${data.full_name}</p>
        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${data.phone}</p>
        <p><strong>–£—Å–ª—É–≥–∞:</strong> ${data.service_type}</p>
        <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ${data.message}</p>
      `
    });
    console.log('üì® –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.messageId);
    return info;
  } catch (err) {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', err);
    throw err;
  }
};