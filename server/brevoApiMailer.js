import SibApiV3Sdk from 'sib-api-v3-sdk';
import dotenv from 'dotenv';

dotenv.config({ path: './server/.env' });

const sendApplicationEmail = async ({ full_name, phone, service_type, message }) => {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API Brevo
  const defaultClient = SibApiV3Sdk.ApiClient.instance;
  const apiKey = defaultClient.authentications['api-key'];
  apiKey.apiKey = process.env.BREVO_API_KEY;

  const apiInstance = new SibApiV3Sdk.TransactionalEmailsApi();

  const emailData = {
    sender: { name: 'PTO –°–∞–π—Ç', email: process.env.SMTP_USER },
    to: [{ email: process.env.ADMIN_EMAIL }],
    subject: `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É: ${service_type}`,
    htmlContent: `
      <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</h2>
      <p><strong>–ò–º—è:</strong> ${full_name}</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
      <p><strong>–£—Å–ª—É–≥–∞:</strong> ${service_type}</p>
      <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong><br>${message}</p>
    `,
  };

  try {
    const response = await apiInstance.sendTransacEmail(emailData);
    console.log('üì® –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID:', response?.messageId || response);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ API:', err?.response?.body || err.message || err);
  }
};

export { sendApplicationEmail };
