import nodemailer from 'nodemailer';
import dotenv from 'dotenv';

dotenv.config({ path: './server/.env' });

const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
  tls: {
    rejectUnauthorized: false,
  },
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
transporter.verify((error, success) => {
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message || error);
  } else {
    console.log('‚úÖ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ï—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–æ—Ä–º ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –ø–∏—Å—å–º–æ
    sendTestEmail();
  }
  console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ');
});


const sendTestEmail = async () => {
  try {
    const info = await transporter.sendMail({
      from: `"–°–∞–π—Ç P–¢–û" <${process.env.SMTP_USER}>`,
      to: process.env.ADMIN_EMAIL,
      subject: 'üöÄ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç —Å–∞–π—Ç–∞ P–¢–û',
      text: '–£—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ SMTP –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Brevo.',
    });
    console.log('üì® –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.messageId);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', err.message || err);
  }
};
